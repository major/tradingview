//@version=6
indicator('Volume Trend (thetanerd)', shorttitle = "VolumeTrend", overlay = true)

// Inputs
minDaysForArrows = input.int(10, 'Minimum Days for Arrows', minval = 2)
smaLength = input.int(20, 'SMA Period', minval = 5, maxval = 50)

// ATR Configuration
useATRBasedSMA = input.bool(false, 'Use ATR-Based Dynamic SMA', group = 'ATR Settings')
atrPeriod = input.int(14, 'ATR Period', minval = 5, maxval = 50, group = 'ATR Settings')
atrSMAMin = input.int(20, 'ATR SMA Min Period', minval = 5, maxval = 100, group = 'ATR Settings')
atrSMAMax = input.int(50, 'ATR SMA Max Period', minval = 5, maxval = 100, group = 'ATR Settings')

// Calculate ATR and dynamic SMA length
atr = ta.atr(atrPeriod)
atr20 = ta.sma(atr, 20)
atrRatio = na(atr) or na(atr20) or atr20 == 0 ? 1.0 : atr / atr20

// Dynamic SMA length calculation with user-configurable range
// High ATR (volatile) = shorter SMA, Low ATR (stable) = longer SMA
rangeMid = math.round((atrSMAMin + atrSMAMax) / 2)
rangeSpread = (atrSMAMax - atrSMAMin) / 2
dynamicSMALength = useATRBasedSMA ? math.round(math.max(atrSMAMin, math.min(atrSMAMax, rangeMid - (atrRatio - 1) * rangeSpread))) : smaLength

// Calculate volume SMA
volumeSMA = ta.sma(volume, dynamicSMALength)

// Determine if SMA is increasing or decreasing
smaIncreasing = volumeSMA > volumeSMA[1]
smaDecreasing = volumeSMA < volumeSMA[1]

// Variables to track consecutive patterns
var int consecutiveIncreases = 0
var int consecutiveDecreases = 0

// Track consecutive SMA increases
if smaIncreasing
    consecutiveIncreases := consecutiveIncreases + 1
    consecutiveDecreases := 0
    consecutiveDecreases
else if smaDecreasing
    // Track consecutive SMA decreases
    consecutiveDecreases := consecutiveDecreases + 1
    consecutiveIncreases := 0
    consecutiveIncreases
else // SMA is flat (rare but possible)
    consecutiveIncreases := 0
    consecutiveDecreases := 0
    consecutiveDecreases

// Plot arrows only after minimum consecutive days threshold is met
plotshape(smaIncreasing and consecutiveIncreases >= minDaysForArrows, title = 'SMA Increasing (10+ days)', location = location.belowbar, color = color.green, style = shape.triangleup, size = size.tiny)
plotshape(smaDecreasing and consecutiveDecreases >= minDaysForArrows, title = 'SMA Decreasing (10+ days)', location = location.belowbar, color = color.red, style = shape.triangledown, size = size.tiny)

// Plot volume and its SMA for reference (hidden by default)
plot(volume, color = color.new(color.gray, 70), title = 'Volume', style = plot.style_columns, display = display.none)
plot(volumeSMA, color = smaIncreasing ? color.green : smaDecreasing ? color.red : color.gray, title = 'Volume SMA', linewidth = 2, display = display.none)

// Determine the appropriate time unit based on timeframe
getTimeUnit() =>
    tf = timeframe.period
    if timeframe.isminutes
        'mins'
    else if timeframe.isseconds
        'secs'
    else if timeframe.isdaily
        'days'
    else if timeframe.isweekly
        'weeks'
    else if timeframe.ismonthly
        'months'
    else
        'periods'

// Add info box showing current pattern with dynamic time unit
var table infoBox = table.new(position.top_right, 1, 2, bgcolor = color.new(color.black, 90))
if barstate.islast
    timeUnit = getTimeUnit()
    table.cell(infoBox, 0, 0, 'Volume SMA Trend', text_color = color.white, text_size = size.small)
    string trendText = smaIncreasing ? '↑ ' + str.tostring(consecutiveIncreases) + ' ' + timeUnit : smaDecreasing ? '↓ ' + str.tostring(consecutiveDecreases) + ' ' + timeUnit : '→ Flat'
    color trendColor = smaIncreasing ? color.green : smaDecreasing ? color.red : color.gray
    table.cell(infoBox, 0, 1, trendText, text_color = trendColor, text_size = size.small)
