// Copyright 2025 Major Hayden
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//@version=6
indicator('Relative Strength Leadership', shorttitle = 'RS Leadership', overlay = false)

// ============================================================================
// USER INPUTS
// ============================================================================

// Comparison symbol input
comparisonSymbol = input.symbol('SPY', 'Comparison Symbol', tooltip = 'Symbol to compare relative strength against (default: SPY)')

// Moving average lengths
fastLength = input.int(20, 'Fast MA Length', minval = 5, maxval = 50, step = 1, tooltip = 'Fast moving average period for detecting recent RS changes')
slowLength = input.int(50, 'Slow MA Length', minval = 20, maxval = 100, step = 1, tooltip = 'Slow moving average period for establishing RS trend')

// Display options
showBackground = input.bool(true, 'Show Background Color', tooltip = 'Color background green when leading, red when lagging')
normalizeToStart = input.bool(false, 'Normalize to 100', tooltip = 'Normalize RS ratio to start at 100 for easier visual comparison')

// ============================================================================
// COLOR INPUTS
// ============================================================================

colorRSLine = input.color(color.new(color.white, 0), 'RS Ratio Line', group = 'Colors')
colorFastMA = input.color(color.new(color.aqua, 50), 'Fast MA', group = 'Colors')
colorSlowMA = input.color(color.new(color.orange, 50), 'Slow MA', group = 'Colors')
colorLeading = input.color(color.new(color.green, 90), 'Leading Background', group = 'Colors')
colorLagging = input.color(color.new(color.red, 90), 'Lagging Background', group = 'Colors')

// ============================================================================
// CALCULATIONS
// ============================================================================

// Get close price from comparison symbol
comparisonClose = request.security(comparisonSymbol, timeframe.period, close, lookahead = barmerge.lookahead_off)

// Calculate relative strength ratio (current symbol / comparison symbol)
// Handle division by zero
rsRatio = comparisonClose > 0 ? close / comparisonClose : na

// Optional normalization: scale to start at 100
var float firstValidRS = na
if na(firstValidRS) and not na(rsRatio)
    firstValidRS := rsRatio

normalizedRS = normalizeToStart ? (rsRatio / firstValidRS * 100) : rsRatio

// Calculate moving averages of the RS ratio
fastMA = ta.sma(normalizedRS, fastLength)
slowMA = ta.sma(normalizedRS, slowLength)

// Detect crossovers
bullishCross = ta.crossover(fastMA, slowMA)  // Fast crosses above slow = transitioning to leadership
bearishCross = ta.crossunder(fastMA, slowMA) // Fast crosses below slow = transitioning to weakness

// Determine current state (leading or lagging)
isLeading = fastMA > slowMA

// ============================================================================
// ALERT CONDITIONS
// ============================================================================

alertcondition(bullishCross, title = 'Bullish RS Turning Point', message = 'ðŸš€ {{ticker}} transitioning from lagging to LEADING benchmark')
alertcondition(bearishCross, title = 'Bearish RS Turning Point', message = 'ðŸ“‰ {{ticker}} transitioning from leading to LAGGING benchmark')

// ============================================================================
// PLOTTING
// ============================================================================

// Plot the RS ratio line
plot(normalizedRS, title = 'RS Ratio', color = colorRSLine, linewidth = 1)

// Plot the moving averages
plot(fastMA, title = 'Fast MA', color = colorFastMA, linewidth = 2)
plot(slowMA, title = 'Slow MA', color = colorSlowMA, linewidth = 2)

// Plot background color
bgcolor(showBackground ? (isLeading ? colorLeading : colorLagging) : na, title = 'Leadership State')

// ============================================================================
// DATA WINDOW VALUES
// ============================================================================

// Display values in data window for debugging
plot(close, title = 'Current Close', display = display.data_window, color = color.blue)
plot(comparisonClose, title = 'Comparison Close', display = display.data_window, color = color.orange)
plot(rsRatio, title = 'Raw RS Ratio', display = display.data_window, color = color.gray)
plot(normalizedRS, title = 'RS Ratio (Displayed)', display = display.data_window, color = color.white)
plot(fastMA, title = 'Fast MA Value', display = display.data_window, color = color.aqua)
plot(slowMA, title = 'Slow MA Value', display = display.data_window, color = color.yellow)
